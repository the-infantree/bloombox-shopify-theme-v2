{% comment %}
  The contents of the collection.liquid template can be found in /sections/collection-template.liquid
{% endcomment %}

{% section 'collection-template' %}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script type="text/javascript">
  var pagination_value = 1;  
  var pagination_limit = 24;
  var pagination_current = '';
  var all_products_count = '';
  
//   // Set a Cookie
  function setCookie(cName, cValue, expDays) {
    let date = new Date();
    date.setTime(date.getTime() + (expDays * 24 * 60 * 60 * 1000));
    const expires = "expires=" + date.toUTCString();
    document.cookie = cName + "=" + cValue + "; " + expires + "; path=/";
  }
  
  setTimeout(function(){
    // Toggles collection filter menu visibility
    (function () {
      const headings = document.querySelectorAll(".js_toggle__button");
      Array.prototype.forEach.call(headings, (h) => {        
        let btn = h.querySelector(".dropdown__button ");
        let href = h.nextSibling.querySelector(".tag-toggle ");
        //console.log(h);
        let panel = h.nextElementSibling;
        btn.onclick = () => {
          if (btn.getAttribute("aria-expanded") === "true") {
            // if active button clicked
            btn.setAttribute("aria-expanded", "false");
            panel.setAttribute("hidden", true);
          } else {
            // if inactive button clicked
            Array.prototype.forEach.call(headings, (h) => {
              var buttons = h.querySelector("button");
              var panels = h.nextElementSibling;
              buttons.setAttribute("aria-expanded", "false");
              panels.setAttribute("hidden", true);
            });

            btn.setAttribute("aria-expanded", "true");
            panel.removeAttribute("hidden");
          }
        };
      });
    })();
    /* Should be work  */
    /* Working fine */
    function getAlert() {
      (function () {
        const headings = document.querySelectorAll(".js_toggle__button");
        Array.prototype.forEach.call(headings, (h) => {        
          let btn = h.querySelector(".dropdown__button ");
          let href = h.nextSibling.querySelector(".tag-toggle ");
          //console.log(h);
          let panel = h.nextElementSibling;
//           if (btn.getAttribute("aria-expanded") === "true") {
//             // if active button clicked
//             btn.setAttribute("aria-expanded", "false");
//             panel.setAttribute("hidden", true);
//           }
//           btn.onclick = () => {
//             if (btn.getAttribute("aria-expanded") === "true") {
//               // if active button clicked
//               btn.setAttribute("aria-expanded", "false");
//               panel.setAttribute("hidden", true);
//             } else {
//               // if inactive button clicked
//               Array.prototype.forEach.call(headings, (h) => {
//                 var buttons = h.querySelector("button");
//                 var panels = h.nextElementSibling;
//                 buttons.setAttribute("aria-expanded", "false");
//                 panels.setAttribute("hidden", true);
//               });

//               btn.setAttribute("aria-expanded", "true");
//               panel.removeAttribute("hidden");
//             }
//           };
        });
      })();
    }
    document.onclick = getAlert;
    document.body.click();
    
    var ignoreClickOnMeElement = document.getElementById('filter-list-custom');

    document.addEventListener('click', function(event) {
      var isClickInsideElement = ignoreClickOnMeElement.contains(event.target);
      if (!isClickInsideElement) {
        //Do something click is outside specified element
        (function () {
          const headings = document.querySelectorAll(".js_toggle__button");
          Array.prototype.forEach.call(headings, (h) => {        
            let btn = h.querySelector(".dropdown__button ");
            let href = h.nextSibling.querySelector(".tag-toggle ");
            //console.log(h);
            let panel = h.nextElementSibling;
            if (btn.getAttribute("aria-expanded") === "true") {
              // if active button clicked
              btn.setAttribute("aria-expanded", "false");
              panel.setAttribute("hidden", true);
            }            
          });
        })();
      }
    });
    
  }, 4000);
 
  //Filter trigger event  
  //var tags_all = [];
  var tags_all = '';
  var tags_all1 = '';
  var sort_field = '';
  var sort_direction = '';  
  function pop(e) {
//     document.getElementById("loader").style.display = "block";    
    document.getElementById("loader").removeAttribute("style");
    //e.preventDefault()    
    const div = document.querySelector('body');
    var location_id = '';
    var collection_id = '';
    var selected_tag = e.textContent;
    var get_title = e.getAttribute("title"); 
    
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';
    }
    var active_tag = "Remove " + selected_tag;    
    e.setAttribute("title", active_tag);    
//     var tags_all = [];
//     tags_all.push({
//       selected_all_tags: selected_tag
//     });
    
    if(get_title.indexOf('Remove') !== -1){
      let current_all_tags = getCookie("filter_fields1");
      var final_tags = current_all_tags.replace(selected_tag, '')
      setCookie('filter_fields1', final_tags, 30);
      
      if(tags_all.indexOf(selected_tag) !== -1){        
        var removeData = tags_all.replace(selected_tag,"");
        var removeData1 = removeData.replace(',,',",");
        tags_all = removeData1;
        var final_tags = removeData1.substring(1);
        
        var lastChar = final_tags.slice(-1);
        if (lastChar == ',') {
          final_tags = final_tags.slice(0, -1);          
        }        
        selected_tag = '';        
      }      
    }else{
      tags_all1 = selected_tag;
      tags_all = tags_all + ',' + tags_all1;        
      var final_tags = tags_all.substring(1);
      let filter_fields1 = getCookie("filter_fields1");    
      if (filter_fields1 !== undefined) {
        var final_tags = filter_fields1 + tags_all
        }
      var a = final_tags.split(',');
      var x2 = [];
      for (var i in a)
        if(x2.indexOf(a[i]) == -1) x2.push(a[i])
        x2.join(',');
      console.log(x2);
      final_tags = x2.toString();  
      setCookie('filter_fields1', final_tags, 30);
    }    
    var collection_handle1 = '{{ collection.handle }}';  
    setCookie('collection_handle', collection_handle1, 30);
    setCookie('pagination_value1', '1', 30);    
//     const string fruit = tags_all
//     string[] split = tags_all.Split(',');    
    //Multiple selected tags    
    if (final_tags !== undefined) {
      var names = final_tags;
      var nameArr = names.split(',');
      document.getElementById("filter__current-tags").innerHTML = '';    
      //console.log(nameArr.length);
      for(var i = 0; i < nameArr.length; i++){
        if(nameArr[i]){
          var multiple_selected = '<li class="filter-tag selected"><a href="javascript:void(0)" onclick="pop(this)" title="Remove '+ nameArr[i] +'">'+ nameArr[i] +'</a></li>'
          document.getElementById("filter__current-tags").innerHTML += multiple_selected;
        }      
      }
    }else{
      var final_tags = '';
      document.getElementById("filter__current-tags").innerHTML = '';      
      //document.getElementById("filter__reset").innerHTML = '';
    }
	let sort_field2 = getCookie("sort_field2");
    let sort_direction2 = getCookie("sort_direction2");
    if (sort_field2 !== undefined) {      
      if (sort_direction2 !== null) {
        var sort_field = sort_field2;   
      }else{
        var sort_field = '';        
      }
    }else{
      var sort_field = '';      
    }
    if (sort_direction2 !== undefined) {      
      var sort_direction = sort_direction2;      
    }else{
      var sort_direction = '';      
    }
    
    let selected_alphabet = getCookie("alphabet");
    
    //alert(final_tags);
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',  
      dataType: "json",
      async: false,      
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field, "sort_direction": sort_direction, "alphabet": selected_alphabet},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
        
        document.getElementById("count_update").innerHTML = '';
        all_products_count = response.total_records;
        document.getElementById("count_update").innerHTML += all_products_count;
        //console.log(all_products_count);
        //Features Filter Dropdown
        var dropdown_leight = response.filters.Features;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-features").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Features.length; i++) {
            //console.log(i);
            if(response.filters.Features[i].status === true){
              var substring =  response.filters.Features[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Features[i].label;                
              }else{
                var atr_title = response.filters.Features[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Features[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Features[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-features").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-light").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
            if(response.filters.Light_Requirements[i].status === true){
              var substring =  response.filters.Light_Requirements[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Light_Requirements[i].label;                
              }else{
                var atr_title = response.filters.Light_Requirements[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Light_Requirements[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-light").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-size").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            //console.log(final_tags);
            if(response.filters.Size[i].status === true){
              var substring =  response.filters.Size[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Size[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Size[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Size[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-size").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-native").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Native.length; i++) {
            //console.log(i);
            if(response.filters.Native[i].status === true){
              var substring =  response.filters.Native[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Native[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Native[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Native[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-native").innerHTML += filter_child_list;
        }
        //Product listing
        document.getElementById("product-grid-custom").innerHTML = '';
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;
          prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;          
          
                          
          if(prod_inventory <= 0){          
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_incoming_inventory > 0){                   
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){                        
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          }     
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
                    

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;

        }
        document.getElementById("loader").style.display = "none";        
      },
      error: function (response) {
        alert('Not found');
      }
      
      
      
    });
    //Rest all filter
    //console.log(tags_all);
    if(tags_all === ','){
      document.getElementById("filter__reset").innerHTML = '';      
    }else{      
      const elements = document.getElementsByClassName("filter__reset");
      while (elements.length > 0) elements[0].remove();
      var collection_handle2 = '{{ collection.handle }}';
      var rest_filter = '<div id="filter__reset" class="filter__reset"> <a id="filter_reset-button" onclick="reset_fillter(this)" class="filter_reset-button" href="javascript:void(0)">Reset all filters</a> </div>'    
      document.getElementById("filter-bar-details-custom").innerHTML += rest_filter;
    }
    
    //alphabets
    if (selected_alphabet !== undefined) {
    if(selected_alphabet.length > 0){
        var multiple_selected1 = '<li class="filter-tag selected"><a href="javascript:void(0)" onclick="removealphabet(this)" title="Remove '+ nameArr[i] +'">Begins with '+ selected_alphabet +'</a></li>'
        document.getElementById("filter__current-tags").innerHTML += multiple_selected1;
      }
    }
    document.getElementById("alphabet").innerHTML = '';
    var alphabet = '<div><b>FILTER BY LETTER: </b></div><div class="variable-width"><span class="alphabet-inner" onclick="alphabets(this)">A</span><span class="alphabet-inner" onclick="alphabets(this)">B</span><span class="alphabet-inner" onclick="alphabets(this)">C</span><span class="alphabet-inner" onclick="alphabets(this)">D</span><span class="alphabet-inner" onclick="alphabets(this)">E</span><span class="alphabet-inner" onclick="alphabets(this)">F</span><span class="alphabet-inner" onclick="alphabets(this)">G</span><span class="alphabet-inner" onclick="alphabets(this)">H</span><span class="alphabet-inner" onclick="alphabets(this)">I</span><span class="alphabet-inner" onclick="alphabets(this)">J</span><span class="alphabet-inner" onclick="alphabets(this)">K</span><span class="alphabet-inner" onclick="alphabets(this)">L</span><span class="alphabet-inner" onclick="alphabets(this)">M</span><span class="alphabet-inner" onclick="alphabets(this)">N</span><span class="alphabet-inner" onclick="alphabets(this)">O</span><span class="alphabet-inner" onclick="alphabets(this)">P</span><span class="alphabet-inner" onclick="alphabets(this)">Q</span><span class="alphabet-inner" onclick="alphabets(this)">R</span><span class="alphabet-inner" onclick="alphabets(this)">S</span><span class="alphabet-inner" onclick="alphabets(this)">T</span><span class="alphabet-inner" onclick="alphabets(this)">U</span><span class="alphabet-inner" onclick="alphabets(this)">V</span><span class="alphabet-inner" onclick="alphabets(this)">W</span><span class="alphabet-inner" onclick="alphabets(this)">X</span><span class="alphabet-inner" onclick="alphabets(this)">Y</span><span class="alphabet-inner" onclick="alphabets(this)">Z</span></div>'
      document.getElementById("alphabet").innerHTML += alphabet;
      let alphabet1 = getCookie("alphabet");
      const ul = document.getElementById('alphabet');
      const listItems = ul.getElementsByTagName('span');      
      for (let i = 0; i <= listItems.length - 1; i++) {
        var all_alphabets = listItems[i].innerHTML;
        if (alphabet1 !== undefined) {  
          if(alphabet1.indexOf(all_alphabets) !== -1){         
            listItems[i].classList.add('active');
          }
        }
      }
    
    
    //pagination        
//     console.log(pagination_value1);
//     console.log(pagination_value);
    if(all_products_count > pagination_limit){      
    document.getElementById("list--inline-pagination").innerHTML = '';
    var rountup = all_products_count / pagination_limit;
    var rountup1 = Math.ceil(rountup);
    var prev_page = parseInt(pagination_value) - 1;
    var next_page = parseInt(pagination_value) + 1;    
//       console.log(pagination_value);
//       console.log(rountup1);
    if(pagination_value == rountup1){
      var next_html = '<li class="paginate__next" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Next page</span> </button> </li>'
    }else{
      var next_html = '<li class="paginate__next"> <a href="javascript:void(0)" data-next-page="'+ next_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
    }
    if(pagination_value == 1){
      var prev_html = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li>'
    }else{
      var prev_html = '<li class="paginate__prev"> <a href="javascript:void(0)" data-next-page="'+ prev_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Previous page</span> </a> </li>'
    }
    var pagination_text = ''+ prev_html +'<li class="pagination__text">Page '+ pagination_value +' of '+ rountup1 +'</li>'+ next_html +''
    document.getElementById("list--inline-pagination").innerHTML += pagination_text;
    }else{
      document.getElementById("list--inline-pagination").innerHTML = '';
    }
    
    //Toggle Close
    (function () {
      const headings = document.querySelectorAll(".js_toggle__button");
      Array.prototype.forEach.call(headings, (h) => {        
        let btn = h.querySelector(".dropdown__button ");
        let href = h.nextSibling.querySelector(".tag-toggle ");
        //console.log(h);
        let panel = h.nextElementSibling;        
        if (btn.getAttribute("aria-expanded") === "true") {
          // if active button clicked
          btn.setAttribute("aria-expanded", "false");
          panel.setAttribute("hidden", true);
        }        
      });
    })();
    return false;
  }
  function alphabets(e) {
    document.getElementById("loader").style.display = "block";
    const div = document.querySelector('body');
    var selected_alphabet = e.innerHTML;
    setCookie('alphabet', selected_alphabet, 30);    
    if (document.querySelector('#alphabet .active') !== null) {
      document.querySelector('#alphabet .active').classList.remove('active');
    }
    e.classList.add("active");    
    var collection_handle1 = '{{ collection.handle }}';    
    setCookie('collection_handle', collection_handle1, 30);
    var location_id = '';
    var collection_id = '';    
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';
    }    
    let filter_fields1 = getCookie("filter_fields1");
    if (filter_fields1 !== undefined) {
      var final_tags = filter_fields1.substring(0);
    }else{
      var final_tags = '';
    }    
    let filter_fields2 = getCookie("sort_field2");
    if (filter_fields2 !== undefined) {
      var sort_field = filter_fields2;
    }else{
      var sort_field = '';
    }
    let filter_fields3 = getCookie("sort_direction2");
    if (filter_fields3 !== undefined) {
      var sort_direction = filter_fields3;
    }else{
      var sort_direction = '';
    }
    let pagination_value = getCookie("pagination_value1");
    
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',  
      dataType: "json",
      async: false,      
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field, "sort_direction": sort_direction, "alphabet": selected_alphabet},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
//         console.log('hello');
//         console.log(response);
        document.getElementById("count_update").innerHTML = '';
        all_products_count = response.total_records;
        document.getElementById("count_update").innerHTML += all_products_count;
        //console.log(all_products_count);
        //Features Filter Dropdown
        var dropdown_leight = response.filters.Features;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-features").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Features.length; i++) {
            //console.log(i);
            if(response.filters.Features[i].status === true){
              var substring =  response.filters.Features[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Features[i].label;                
              }else{
                var atr_title = response.filters.Features[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Features[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Features[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-features").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-light").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
            if(response.filters.Light_Requirements[i].status === true){
              var substring =  response.filters.Light_Requirements[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Light_Requirements[i].label;                
              }else{
                var atr_title = response.filters.Light_Requirements[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Light_Requirements[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-light").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-size").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            //console.log(final_tags);
            if(response.filters.Size[i].status === true){
              var substring =  response.filters.Size[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Size[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Size[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Size[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-size").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-native").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Native.length; i++) {
            //console.log(i);
            if(response.filters.Native[i].status === true){
              var substring =  response.filters.Native[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Native[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Native[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Native[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-native").innerHTML += filter_child_list;
        }
        //Product listing
        document.getElementById("product-grid-custom").innerHTML = '';
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;
          prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;          
          
                          
          if(prod_inventory <= 0){          
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_incoming_inventory > 0){                   
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){                        
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          }     
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
                    

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;

        }
        document.getElementById("loader").style.display = "none";
      },
      error: function () {
        alert('Not found');
      }      
    });
    
    //reset all       
    const elements = document.getElementsByClassName("filter__reset");
      while (elements.length > 0) elements[0].remove();      
      var rest_filter = '<div id="filter__reset" class="filter__reset"> <a id="filter_reset-button" onclick="reset_fillter(this)" class="filter_reset-button" href="javascript:void(0)">Reset all filters</a> </div>'    
      document.getElementById("filter-bar-details-custom").innerHTML += rest_filter;
    
    
    //sort by
    let alphabet1 = getCookie("alphabet");
      const ul = document.getElementById('filter__current-tags');
      const listItems = ul.getElementsByTagName('li');      
      for (let i = 0; i <= listItems.length - 1; i++) {
        var all_alphabets = listItems[i].innerHTML;
        if(all_alphabets.indexOf('Begins with') !== -1){         
          listItems[i].remove();          
        }
      }
    
// 	var rest_filter = '<div id="filter__reset" class="filter__reset"> <a id="filter_reset-button" onclick="reset_fillter(this)" class="filter_reset-button" href="javascript:void(0)">Reset all filters</a> </div>'    
//     document.getElementById("filter-bar-details-custom").innerHTML += rest_filter;
    var multiple_selected1 = '<li class="filter-tag selected"><a href="javascript:void(0)" onclick="removealphabet(this)" title="'+ selected_alphabet +'">Begins with '+ selected_alphabet +'</a></li>'
    document.getElementById("filter__current-tags").innerHTML += multiple_selected1;
    let sort_field2 = getCookie("sort_field2");
      let sort_direction2 = getCookie("sort_direction2");
//     var item_count = document.getElementsByClassName('filter-bar__item-count');
//     item_count.remove();
      
//     var product_count = '<span class="filter-bar__item-count"><span id="count_update">'+ all_products_count +'</span> products</span><ul id="filter__current-tags" class="filter__current-tags"></ul>'
//     document.getElementById("filter-bar-details-custom").innerHTML += product_count;
    
//     var sort_html = document.getElementById("filter-bar-details-custom").innerHTML = '';
// //     sort_html.remove();
//     var sort_by = '<div id="sort-by" class="sort-by"> <label class="sort-by__label" for="SortBy">Sort by</label> <select class="sort-by__select" name="SortBy" onchange="sortby(this)" id="SortBy"> <option value="manual">Featured</option> <option data-sort-direction="asc" value="title">Alphabetically, A-Z</option> <option data-sort-direction="desc" value="title">Alphabetically, Z-A</option> <option data-sort-direction="asc" value="price">Price, low to high</option> <option data-sort-direction="desc" value="price">Price, high to low</option> <option data-sort-direction="asc" value="shopify_published_at">Date, old to new</option> <option data-sort-direction="desc" value="shopify_published_at">Date, new to old</option> </select></div>'
//     document.getElementById("filter-bar-details-custom").innerHTML += sort_by;
//     var options = document.getElementById("SortBy").options;
//     for (let i = 0; i < options.length; i++) {         
//       var option_attr = options[i].getAttribute('data-sort-direction');
//       var option_val = options[i].value;

//       if(option_val !== 'manual'){
//         if (option_val === sort_field2 && option_attr === sort_direction2){
//           options[i].selected = true;
//         }
//       }
//     }
    
    let pagination_value2 = getCookie("pagination_value1");

      
      if (pagination_value2 !== undefined) {
        var pagination_value1 = pagination_value2;      
      }else{      
        pagination_value1 = 1;
      }       

      if(all_products_count > pagination_limit){        
        document.getElementById("list--inline-pagination").innerHTML = '';
        var rountup = all_products_count / pagination_limit;
        var rountup1 = Math.ceil(rountup);
        var prev_page = parseInt(pagination_value) - 1;
        var next_page = parseInt(pagination_value) + 1;    
        if(pagination_value == rountup1){
          var next_html = '<li class="paginate__next" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Next page</span> </button> </li>'
          }else{
            var next_html = '<li class="paginate__next"> <a href="javascript:void(0)" data-next-page="'+ next_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
            }
        if(pagination_value == 1){
          var prev_html = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li>'
          }else{
            var prev_html = '<li class="paginate__prev"> <a href="javascript:void(0)" data-next-page="'+ prev_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Previous page</span> </a> </li>'
            }
        var pagination_text = ''+ prev_html +'<li class="pagination__text">Page '+ pagination_value1 +' of '+ rountup1 +'</li>'+ next_html +''
        document.getElementById("list--inline-pagination").innerHTML += pagination_text;
      }else{
        document.getElementById("list--inline-pagination").innerHTML = '';
      } 
    
  }
  function removealphabet(e){
    document.getElementById("loader").style.display = "block";
    const div = document.querySelector('body');
    var selected_alphabet = e.getAttribute('title');
    setCookie('alphabet', '', 30);
    if (document.querySelector('#alphabet .active') !== null) {
      document.querySelector('#alphabet .active').classList.remove('active');
    }
    var collection_handle1 = '{{ collection.handle }}';    
    setCookie('collection_handle', collection_handle1, 30);
    var location_id = '';
    var collection_id = '';    
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';
    }    
    let filter_fields1 = getCookie("filter_fields1");
    if (filter_fields1 !== undefined) {
      var final_tags = filter_fields1.substring(0);
    }else{
      var final_tags = '';
    }    
    let filter_fields2 = getCookie("sort_field2");
    if (filter_fields2 !== undefined) {
      var sort_field = filter_fields2;
    }else{
      var sort_field = '';
    }
    let filter_fields3 = getCookie("sort_direction2");
    if (filter_fields3 !== undefined) {
      var sort_direction = filter_fields3;
    }else{
      var sort_direction = '';
    }
    setCookie('pagination_value1', 1, 30);    
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',  
      dataType: "json",
      async: false,      
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field, "sort_direction": sort_direction, "alphabet": ""},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
//         console.log('hello');
//         console.log(response);
        document.getElementById("count_update").innerHTML = '';
        all_products_count = response.total_records;
        document.getElementById("count_update").innerHTML += all_products_count;
        //console.log(all_products_count);
        //Features Filter Dropdown
        var dropdown_leight = response.filters.Features;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-features").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Features.length; i++) {
            //console.log(i);
            if(response.filters.Features[i].status === true){
              var substring =  response.filters.Features[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Features[i].label;                
              }else{
                var atr_title = response.filters.Features[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Features[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Features[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-features").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-light").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
            if(response.filters.Light_Requirements[i].status === true){
              var substring =  response.filters.Light_Requirements[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Light_Requirements[i].label;                
              }else{
                var atr_title = response.filters.Light_Requirements[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
            }else{
              //console.log('false');              
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Light_Requirements[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-light").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-size").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            //console.log(final_tags);
            if(response.filters.Size[i].status === true){
              var substring =  response.filters.Size[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Size[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Size[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Size[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-size").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-native").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Native.length; i++) {
            //console.log(i);
            if(response.filters.Native[i].status === true){
              var substring =  response.filters.Native[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Native[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Native[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Native[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-native").innerHTML += filter_child_list;
        }
        //Product listing
        document.getElementById("product-grid-custom").innerHTML = '';
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;
          prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;          
          
                          
          if(prod_inventory <= 0){          
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_incoming_inventory > 0){                   
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){                        
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          }     
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
                    

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;

        }
        document.getElementById("loader").style.display = "none";
      },
      error: function () {
        alert('Not found');
      }            
    });    
    
    //reset all       
    const elements = document.getElementsByClassName("filter__reset");
    while (elements.length > 0) elements[0].remove();      
    var rest_filter = '<div id="filter__reset" class="filter__reset"> <a id="filter_reset-button" onclick="reset_fillter(this)" class="filter_reset-button" href="javascript:void(0)">Reset all filters</a> </div>'    
    document.getElementById("filter-bar-details-custom").innerHTML += rest_filter;

    
    //sort by    
    const ul = document.getElementById('filter__current-tags');
    const listItems = ul.getElementsByTagName('li');      
    for (let i = 0; i <= listItems.length - 1; i++) {
      var all_alphabets = listItems[i].innerHTML;
      if(all_alphabets.indexOf('Begins with') !== -1){         
        listItems[i].remove();
      }
    }
    let pagination_value2 = getCookie("pagination_value1");


    if (pagination_value2 !== undefined) {
      var pagination_value1 = pagination_value2;      
    }else{      
      pagination_value1 = 1;
    }

    if(all_products_count > pagination_limit){
      document.getElementById("list--inline-pagination").innerHTML = '';
      var rountup = all_products_count / pagination_limit;
      var rountup1 = Math.ceil(rountup);
      var prev_page = parseInt(pagination_value) - 1;
      var next_page = parseInt(pagination_value) + 1;    
      if(pagination_value == rountup1){
        var next_html = '<li class="paginate__next" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Next page</span> </button> </li>'
        }else{
          var next_html = '<li class="paginate__next"> <a href="javascript:void(0)" data-next-page="'+ next_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
          }
      if(pagination_value == 1){
        var prev_html = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li>'
        }else{
          var prev_html = '<li class="paginate__prev"> <a href="javascript:void(0)" data-next-page="'+ prev_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Previous page</span> </a> </li>'
          }
      var pagination_text = ''+ prev_html +'<li class="pagination__text">Page '+ pagination_value1 +' of '+ rountup1 +'</li>'+ next_html +''
      document.getElementById("list--inline-pagination").innerHTML += pagination_text;
    }
  }
  
  function sortby(obj){
    
    document.getElementById("loader").style.display = "block";
    const div = document.querySelector('body');
//     var sort_field1 = document.getElementById("SortBy").value;    
//     var sort_direction1 = obj.options[obj.selectedIndex].getAttribute('data-sort-direction'); 
    sort_field = document.getElementById("SortBy").value;    
    sort_direction = obj.options[obj.selectedIndex].getAttribute('data-sort-direction');
    var collection_handle1 = '{{ collection.handle }}';  
    setCookie('collection_handle', collection_handle1, 30);
    setCookie('sort_field2', sort_field, 30);
    setCookie('sort_direction2', sort_direction, 30);
    if(!sort_direction){
      var sort_field1 = '';
      var sort_direction1 = '';
    }
    var location_id = '';
    var collection_id = '';    
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';
    }
    
//     var final_tags = tags_all.substring(1);
//     alert(final_tags)
    
    let filter_fields1 = getCookie("filter_fields1");
    if (filter_fields1 !== undefined) {
      var final_tags = filter_fields1.substring(0);
    }else{
      var final_tags = '';
    }
    let selected_alphabet = getCookie("alphabet");
    
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',
      async: false,
      dataType: "json",
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field, "sort_direction": sort_direction, "alphabet": selected_alphabet},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
//         console.log(response);
        all_products_count = response.total_records;
        //Features Filter Dropdown
        var dropdown_leight = response.filters.Features;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-features").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Features.length; i++) {
            //console.log(i);
            if(response.filters.Features[i].status === true){
              var substring =  response.filters.Features[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Features[i].label;
              }else{
                var atr_title = response.filters.Features[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Features[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Features[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-features").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-light").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
            //console.log(i);
            var substring =  response.filters.Light_Requirements[i].label;
            if(final_tags.indexOf(substring) !== -1){
              if(final_tags === response.filters.Light_Requirements[i].label){
                var atr_title = 'Remove ' + response.filters.Light_Requirements[i].label;
              }else{
                var atr_title = response.filters.Light_Requirements[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Light_Requirements[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-light").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-size").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            //console.log(final_tags);
            if(response.filters.Size[i].status === true){
              var substring =  response.filters.Size[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Size[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Size[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Size[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-size").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-native").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Native.length; i++) {
            //console.log(i);
            if(response.filters.Native[i].status === true){
              var substring =  response.filters.Native[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Native[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Native[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Native[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-native").innerHTML += filter_child_list;
        }
        //Product listing
        document.getElementById("product-grid-custom").innerHTML = '';
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;
          prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;
          
          
          if(prod_inventory <= 0){
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }                
          if(prod_incoming_inventory > 0){       
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){              
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          }
          
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
          
          

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;

        }
        document.getElementById("loader").style.display = "none";
      }
    });	
  }
  
  //pagination
  function paginate(e) {
    var pagination_value = e.getAttribute("data-next-page");
    var collection_handle1 = '{{ collection.handle }}';  
    setCookie('collection_handle', collection_handle1, 30);
    const div = document.querySelector('body');
    var location_id = '';
    var collection_id = ''; 
    var final_tags = '';
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';
    }    
    var final_tags = tags_all.substring(1);
    let selected_alphabet = getCookie("alphabet");
    
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',
      async: false,
      dataType: "json",
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field,"sort_direction": sort_direction, "alphabet": selected_alphabet},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
        all_products_count = response.total_records;
//         console.log(response);
        //Features Filter Dropdown
        var dropdown_leight = response.filters.Features;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-features").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Features.length; i++) {
            //console.log(i);
            if(response.filters.Features[i].status === true){
              var substring =  response.filters.Features[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Features[i].label;
              }else{
                var atr_title = response.filters.Features[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Features[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Features[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-features").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-light").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
            //console.log(i);
            var substring =  response.filters.Light_Requirements[i].label;
            if(final_tags.indexOf(substring) !== -1){
              if(final_tags === response.filters.Light_Requirements[i].label){
                var atr_title = 'Remove ' + response.filters.Light_Requirements[i].label;
              }else{
                var atr_title = response.filters.Light_Requirements[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Light_Requirements[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-light").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-size").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            //console.log(final_tags);
            if(response.filters.Size[i].status === true){
              var substring =  response.filters.Size[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Size[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Size[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Size[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-size").innerHTML += filter_child_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
          document.getElementById("filter-child-list-native").innerHTML = '';
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Native.length; i++) {
            //console.log(i);
            if(response.filters.Native[i].status === true){
              var substring =  response.filters.Native[i].label;
              if(final_tags.indexOf(substring) !== -1){
                var atr_title = 'Remove ' + response.filters.Native[i].label;
              }else{
                var atr_title = response.filters.Size[i].label;
              }                        
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ atr_title +'">'+ response.filters.Native[i].label +'</a></li>'
            }else{
              //console.log('false');
              filter_child_list_1 = '<li class="tag-"><span class="tag-toggle tag-toggle--disabled">'+ response.filters.Native[i].label +'</span></li>'
            }          
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          document.getElementById("filter-child-list-native").innerHTML += filter_child_list;
        }
        //Product listing
        document.getElementById("product-grid-custom").innerHTML = '';
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;
          prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;
          
          
                          
          if(prod_inventory <= 0){          
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_incoming_inventory > 0){                   
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){                        
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          } 
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;

        }
      }
    });
    
    if(all_products_count > pagination_limit){
    document.getElementById("list--inline-pagination").innerHTML = '';
    var rountup = all_products_count / pagination_limit;
    var rountup1 = Math.ceil(rountup);
    var prev_page = parseInt(pagination_value) - 1;
    var next_page = parseInt(pagination_value) + 1;    
    if(pagination_value == rountup1){
      var next_html = '<li class="paginate__next" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Next page</span> </button> </li>'
    }else{
      var next_html = '<li class="paginate__next"> <a href="javascript:void(0)" data-next-page="'+ next_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
    }
    if(pagination_value == 1){
      var prev_html = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li>'
    }else{
      var prev_html = '<li class="paginate__prev"> <a href="javascript:void(0)" data-next-page="'+ prev_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Previous page</span> </a> </li>'
    }
    var pagination_text = ''+ prev_html +'<li class="pagination__text">Page '+ pagination_value +' of '+ rountup1 +'</li>'+ next_html +''
    document.getElementById("list--inline-pagination").innerHTML += pagination_text;
    }    
    setCookie('pagination_value1', pagination_value, 30);
    return false
  }
  
    //Get a Cookie
  function getCookie(cName) {    
    const name = cName + "=";
    const cDecoded = decodeURIComponent(document.cookie); //to be careful
    const cArr = cDecoded .split('; ');
    let res;
    cArr.forEach(val => {
      if (val.indexOf(name) === 0) res = val.substring(name.length);
    })
    return res;
  }
  let collection_handle = getCookie("collection_handle");
  var collection_handle1 = '{{ collection.handle }}';
  let pagination_value1 = getCookie("pagination_value1");
  let filter_fields1 = getCookie("filter_fields1");
  let sort_field2 = getCookie("sort_field2");  
  let sort_direction2 = getCookie("sort_direction2");    
  let selected_alphabet2 = getCookie("alphabet");
  if(collection_handle === collection_handle1){   
    if (pagination_value1 !== undefined) {
      var pagination_value = pagination_value1;      
    }else{      
      pagination_value1 = 1;
    }
    if (filter_fields1 !== undefined) {      
      var final_tags = filter_fields1.substring(0);            
    }else{
      var final_tags = '';      
    }
    if (sort_field2 !== undefined) {      
      if (sort_direction2 !== null) {
        var sort_field = sort_field2;   
      }else{
      	var sort_field = '';        
      }
    }else{
      var sort_field = '';      
    }
    if (sort_direction2 !== undefined) {      
      var sort_direction = sort_direction2;      
    }else{
      var sort_direction = '';      
    }
    if (selected_alphabet2 !== undefined) {      
      var selected_alphabet = selected_alphabet2;      
    }else{
      var selected_alphabet = '';      
    }
    setTimeout(function(){
    const div = document.querySelector('body');
    var location_id = '';
    var collection_id = '';
    if (div.classList.contains('user--is-pa')) {
      var location_id = '52305723547';
      var collection_id = '{{ collection.id }}';      
    }
    if (div.classList.contains('user--is-md')) {
      var location_id = '52306968731';
      var collection_id = '{{ collection.id }}';      
    }

    
    $.ajax({
      type: "POST",
      url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',
      async: false,
      dataType: "json",
      headers: {
        "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
        "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
      },
      data: {"location_ids": location_id, "collection_id": collection_id, "filter_fields": final_tags, "sort_field": sort_field, "sort_direction": sort_direction, "alphabet": selected_alphabet},
      success: function (response) {
        if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "block";          
        }
//         console.log(response);
        all_products_count = response.total_records;
        //Features Filter Dropdown        
        var dropdown_leight = response.filters.Features;        
        if (dropdown_leight !== undefined) {
          var filter_child_list = '';
          var filter_child_list_1 = '';          
          for (var i = 0; i < response.filters.Features.length; i++) {            
            var label = response.filters.Features[i].label;            
            if(final_tags.indexOf(label) !== -1){
              filter_child_list_1 = '<a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="Remove '+ response.filters.Features[i].label +'">'+ response.filters.Features[i].label +'</a>'
            }else{
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Features[i].label +'">'+ response.filters.Features[i].label +'</a></li>'
            }            
            filter_child_list = filter_child_list + filter_child_list_1;
          }
          var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Features<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-features" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';
			
          document.getElementById("filter-list-custom").innerHTML += filter_list;
        } 
        
        var dropdown_leight = response.filters.Light_Requirements;
        if (dropdown_leight !== undefined) {
          
        var filter_child_list = '';
        var filter_child_list_1 = '';
        for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
          var label = response.filters.Light_Requirements[i].label;
          if(final_tags.indexOf(label) !== -1){
            filter_child_list_1 = '<a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="Remove '+ response.filters.Light_Requirements[i].label +'">'+ response.filters.Light_Requirements[i].label +'</a>'
          }else{
            filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Light_Requirements[i].label +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
          }          
          filter_child_list = filter_child_list + filter_child_list_1;
        }
        var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Light<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-light" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';		
        document.getElementById("filter-list-custom").innerHTML += filter_list;
        }
        var dropdown_leight = response.filters.Size;
        if (dropdown_leight !== undefined) {
          var filter_child_list = '';
          var filter_child_list_1 = '';
          for (var i = 0; i < response.filters.Size.length; i++) {
            var label = response.filters.Size[i].label;
            if(final_tags.indexOf(label) !== -1){
              filter_child_list_1 = '<a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="Remove '+ response.filters.Size[i].label +'">'+ response.filters.Size[i].label +'</a>'
            }else{
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Size[i].label +'">'+ response.filters.Size[i].label +'</a></li>'
            }            
            filter_child_list = filter_child_list + filter_child_list_1;
            //filter_child_list = filter_child_list.replace(/[&\/\\#,+()$~%.:*?{}]/g,'');
          }
          var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Size<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-size" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';

          document.getElementById("filter-list-custom").innerHTML += filter_list;
        }
        var dropdown_leight = response.filters.Native;
        if (dropdown_leight !== undefined) {
        var filter_child_list = '';
        var filter_child_list_1 = '';
        for (var i = 0; i < response.filters.Native.length; i++) {
          var label = response.filters.Native[i].label;
          if(final_tags.indexOf(label) !== -1){
            filter_child_list_1 = '<a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="Remove '+ response.filters.Native[i].label +'">'+ response.filters.Native[i].label +'</a>'
          }else{
            filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Native[i].label +'">'+ response.filters.Native[i].label +'</a></li>'
          }          
          filter_child_list = filter_child_list + filter_child_list_1;
        }
        var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Native<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-native" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';

        document.getElementById("filter-list-custom").innerHTML += filter_list;
        }        
        //Product listing
        var badges = '';
        for (var i = 0; i < response.products.length; i++) {
//           console.log(i);
          var prod_id = response.products[i].product_id;
          var prod_url = response.products[i].handle;
          var prod_title = response.products[i].title;          
//           prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');                    
          var prod_img = response.products[i].src;
          var prod_from_price = '';
          var prod_regular_price = response.products[i].price;
          var prod_compare_at_price = response.products[i].compare_at_price;
          var prod_inventory = response.products[i].total_qty;
          var prod_incoming_inventory= response.products[i].total_incoming_qty;
          
		          
          if(prod_inventory <= 0){          
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_incoming_inventory > 0){                   
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
          }        
        if(prod_incoming_inventory <= 0 && prod_inventory <= 0){                        
          var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
          }
          if(prod_inventory > 0){  
            if(prod_regular_price && prod_compare_at_price){
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
              }
          }
          
          
//           if(badges){
//             console.log(badges);
//           }
                    
        if(prod_inventory <= 9 &&  prod_inventory >= 0){          
          var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
          }else{
            var left_qty = '';
          }
        if(prod_regular_price){   
          var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }
        if(prod_regular_price && prod_compare_at_price){
          if(prod_inventory <= 0){
            var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
            }else{
              var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }       
        }
        if(prod_from_price){
          var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
          }

        var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

        document.getElementById("product-grid-custom").innerHTML += product_list;                    

        }        
      },error: function() { 
        //alert();
      }
    });                      
      
    //sort by
      var alphabet = '<div><b>FILTER BY LETTER: </b></div><div class="variable-width"><span class="alphabet-inner" onclick="alphabets(this)">A</span><span class="alphabet-inner" onclick="alphabets(this)">B</span><span class="alphabet-inner" onclick="alphabets(this)">C</span><span class="alphabet-inner" onclick="alphabets(this)">D</span><span class="alphabet-inner" onclick="alphabets(this)">E</span><span class="alphabet-inner" onclick="alphabets(this)">F</span><span class="alphabet-inner" onclick="alphabets(this)">G</span><span class="alphabet-inner" onclick="alphabets(this)">H</span><span class="alphabet-inner" onclick="alphabets(this)">I</span><span class="alphabet-inner" onclick="alphabets(this)">J</span><span class="alphabet-inner" onclick="alphabets(this)">K</span><span class="alphabet-inner" onclick="alphabets(this)">L</span><span class="alphabet-inner" onclick="alphabets(this)">M</span><span class="alphabet-inner" onclick="alphabets(this)">N</span><span class="alphabet-inner" onclick="alphabets(this)">O</span><span class="alphabet-inner" onclick="alphabets(this)">P</span><span class="alphabet-inner" onclick="alphabets(this)">Q</span><span class="alphabet-inner" onclick="alphabets(this)">R</span><span class="alphabet-inner" onclick="alphabets(this)">S</span><span class="alphabet-inner" onclick="alphabets(this)">T</span><span class="alphabet-inner" onclick="alphabets(this)">U</span><span class="alphabet-inner" onclick="alphabets(this)">V</span><span class="alphabet-inner" onclick="alphabets(this)">W</span><span class="alphabet-inner" onclick="alphabets(this)">X</span><span class="alphabet-inner" onclick="alphabets(this)">Y</span><span class="alphabet-inner" onclick="alphabets(this)">Z</span></div>'
      document.getElementById("alphabet").innerHTML += alphabet;
      let alphabet1 = getCookie("alphabet");
      const ul = document.getElementById('alphabet');
      const listItems = ul.getElementsByTagName('span');      
      for (let i = 0; i <= listItems.length - 1; i++) {
        var all_alphabets = listItems[i].innerHTML;
        if (alphabet1 !== undefined) {  
          if(alphabet1.indexOf(all_alphabets) !== -1){         
            listItems[i].classList.add('active');
          }
        }
      }
      
      //reset all
      if(final_tags.length > 1 || alphabet1){        
        var rest_filter = '<div id="filter__reset" class="filter__reset"> <a id="filter_reset-button" onclick="reset_fillter(this)" class="filter_reset-button" href="javascript:void(0)">Reset all filters</a> </div>'    
       document.getElementById("filter-bar-details-custom").innerHTML += rest_filter;
      }
      
      // Create a media condition that targets viewports at least 768px wide
      const mediaQuery = window.matchMedia('(max-width: 1250px)')
      // Check if the media query is true
      if (mediaQuery.matches) {
        // Then trigger an alert
        $('.variable-width').slick({
          dots: false,
          infinite: false,
          speed: 300,
          slidesToShow: 1,
          centerMode: false,
          variableWidth: true
        });
      }else{
        //$('.variable-width').slick('unslick');
      }
      
     //console.log(alphabet1);
//       var demo = document.querySelector('#alphabet .alphabet-inner').innerHTML;
//       console.log(demo);
//       if (document.querySelector('#alphabet .active') !== null) {
//       document.querySelector('#alphabet .active').classList.remove('active');
//     }
    
    //console.log(all_products_count);
      
      let sort_field2 = getCookie("sort_field2");
      let sort_direction2 = getCookie("sort_direction2");
      
    var product_count = '<span class="filter-bar__item-count"><span id="count_update">'+ all_products_count +'</span> products</span><ul id="filter__current-tags" class="filter__current-tags"></ul>'
    document.getElementById("filter-bar-details-custom").innerHTML += product_count;
    
    var sort_by = '<div id="sort-by" class="sort-by"> <label class="sort-by__label" for="SortBy">Sort by</label> <select class="sort-by__select" name="SortBy" onchange="sortby(this)" id="SortBy"> <option value="manual">Featured</option> <option data-sort-direction="asc" value="title">Alphabetically, A-Z</option> <option data-sort-direction="desc" value="title">Alphabetically, Z-A</option> <option data-sort-direction="asc" value="price">Price, low to high</option> <option data-sort-direction="desc" value="price">Price, high to low</option> <option data-sort-direction="asc" value="shopify_published_at">Date, old to new</option> <option data-sort-direction="desc" value="shopify_published_at">Date, new to old</option> </select></div>'
    document.getElementById("filter-bar-details-custom").innerHTML += sort_by;
      var options = document.getElementById("SortBy").options;
      for (let i = 0; i < options.length; i++) {         
        var option_attr = options[i].getAttribute('data-sort-direction');
        var option_val = options[i].value;
        
        if(option_val !== 'manual'){
          if (option_val === sort_field2 && option_attr === sort_direction2){
            options[i].selected = true;
          }
        }
      }            
      
      //Multiple selected tags
      var names = final_tags;
      var nameArr = names.split(',');      
      //console.log(nameArr.length);
      for(var i = 0; i < nameArr.length; i++){
        if(nameArr[i]){
          var multiple_selected = '<li class="filter-tag selected"><a href="javascript:void(0)" onclick="pop(this)" title="Remove '+ nameArr[i] +'">'+ nameArr[i] +'</a></li>'
          document.getElementById("filter__current-tags").innerHTML += multiple_selected;
        }      
      }      
      if(selected_alphabet.length > 0){
        var multiple_selected1 = '<li class="filter-tag selected"><a href="javascript:void(0)" onclick="removealphabet(this)" title="Remove '+ nameArr[i] +'">Begins with '+ selected_alphabet +'</a></li>'
        document.getElementById("filter__current-tags").innerHTML += multiple_selected1;
      }
    
      if(all_products_count > pagination_limit){
    document.getElementById("list--inline-pagination").innerHTML = '';
    var rountup = all_products_count / pagination_limit;
    var rountup1 = Math.ceil(rountup);
    var prev_page = parseInt(pagination_value) - 1;
    var next_page = parseInt(pagination_value) + 1;    
    if(pagination_value == rountup1){
      var next_html = '<li class="paginate__next" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Next page</span> </button> </li>'
    }else{
      var next_html = '<li class="paginate__next"> <a href="javascript:void(0)" data-next-page="'+ next_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
    }
    if(pagination_value == 1){
      var prev_html = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li>'
    }else{
      var prev_html = '<li class="paginate__prev"> <a href="javascript:void(0)" data-next-page="'+ prev_page +'" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Previous page</span> </a> </li>'
    }
    var pagination_text = ''+ prev_html +'<li class="pagination__text">Page '+ pagination_value1 +' of '+ rountup1 +'</li>'+ next_html +''
    document.getElementById("list--inline-pagination").innerHTML += pagination_text;
    } 
      
//     if(all_products_count > pagination_limit){
//       var rountup = all_products_count / pagination_limit;
//       var rountup1 = Math.round(rountup);
      
//       var pagination_text = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li><li class="pagination__text">Page 1 of '+ rountup1 +'</li><li class="paginate__next"> <a href="#" data-next-page="2" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
//       document.getElementById("list--inline-pagination").innerHTML += pagination_text;
//     }      

    document.getElementById("loader").style.display = "none";
  }, 2000);
    
    
  }else{   
    setCookie('pagination_value1', 1, 30);
    setCookie('filter_fields1', '', 30);
    setCookie('sort_field2', '', 30);
    setCookie('sort_direction2', '', 30);
    
    setTimeout(function(){
      const div = document.querySelector('body');
      var location_id = '';
      var collection_id = '';
      if (div.classList.contains('user--is-pa')) {
        var location_id = '52305723547';
        var collection_id = '{{ collection.id }}';
      }
      if (div.classList.contains('user--is-md')) {
        var location_id = '52306968731';
        var collection_id = '{{ collection.id }}';
      }

//       console.log(location_id);
      $.ajax({
        type: "POST",
        url: 'https://getblooming.mobikasa.net/api/collectionsproducts?page='+ pagination_value +'',
        async: false,
        dataType: "json",
        headers: {
          "Authorization": "Bearer 2|wqQZXoG0GOWATcvUV1yj8RPNUYNoQfChH3BocLT3",
          "Access-Control-Allow-Origin": "https://getblooming.mobikasa.net"
        },
        data: {"location_ids": location_id, "collection_id": collection_id},
        success: function (response) {
          if(response.total_records === 0){
          document.getElementById("loader").style.display = "none";
          document.getElementById("error-mes").style.display = "block";          
        }else{
          document.getElementById("error-mes").style.display = "none";
        }
//           console.log(response);
          all_products_count = response.total_records;
          //Features Filter Dropdown        
          var dropdown_leight = response.filters.Features;
          if (dropdown_leight !== undefined) {
            var filter_child_list = '';
            var filter_child_list_1 = '';            
            for (var i = 0; i < response.filters.Features.length; i++) {
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Features[i].label +'">'+ response.filters.Features[i].label +'</a></li>'
              filter_child_list = filter_child_list + filter_child_list_1;
            }
            var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Features<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-features" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';

            document.getElementById("filter-list-custom").innerHTML += filter_list;
          } 

          var dropdown_leight = response.filters.Light_Requirements;
          if (dropdown_leight !== undefined) {

            var filter_child_list = '';
            var filter_child_list_1 = '';
            for (var i = 0; i < response.filters.Light_Requirements.length; i++) {
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Light_Requirements[i].label +'">'+ response.filters.Light_Requirements[i].label +'</a></li>'
              filter_child_list = filter_child_list + filter_child_list_1;
            }
            var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Light<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-light" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';		
            document.getElementById("filter-list-custom").innerHTML += filter_list;
          }
          var dropdown_leight = response.filters.Size;
          if (dropdown_leight !== undefined) {
            var filter_child_list = '';
            var filter_child_list_1 = '';
            for (var i = 0; i < response.filters.Size.length; i++) {
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Size[i].label +'">'+ response.filters.Size[i].label +'</a></li>'
              filter_child_list = filter_child_list + filter_child_list_1;
              //filter_child_list = filter_child_list.replace(/[&\/\\#,+()$~%.:*?{}]/g,'');
            }
            var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Size<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-size" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';

            document.getElementById("filter-list-custom").innerHTML += filter_list;
          }
          var dropdown_leight = response.filters.Native;
          if (dropdown_leight !== undefined) {
            var filter_child_list = '';
            var filter_child_list_1 = '';
            for (var i = 0; i < response.filters.Native.length; i++) {
              filter_child_list_1 = '<li class="tag-"><a href="javascript:void(0)" onclick="pop(this)" class="tag-toggle" title="'+ response.filters.Native[i].label +'">'+ response.filters.Native[i].label +'</a></li>'
              filter_child_list = filter_child_list + filter_child_list_1;
            }
            var filter_list = '<li class="filter-list__item"><h3 class="js_toggle__button"><button class="dropdown__button" type="button" aria-expanded="false">Native<svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-down" viewBox="0 0 9 9"><path d="M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z" fill="#fff"></path></svg></button></h3><ul id="filter-child-list-native" class="js_toggle__panel dropdown__panel" hidden="">'+ filter_child_list +'</ul></li>';

            document.getElementById("filter-list-custom").innerHTML += filter_list;
          }        
          //Product listing
          var badges = '';
          for (var i = 0; i < response.products.length; i++) {          
            var prod_id = response.products[i].product_id;
            var prod_url = response.products[i].handle;
            var prod_title = response.products[i].title;
            prod_title = prod_title.replace(/[&\/\\#,+()$~%.:*?<>{}]/g,'');          
            var prod_img = response.products[i].src;
            var prod_from_price = '';
            var prod_regular_price = response.products[i].price;
            var prod_compare_at_price = response.products[i].compare_at_price;
            var prod_inventory = response.products[i].total_qty;
            var prod_incoming_inventory= response.products[i].total_incoming_qty;


            if(prod_inventory <= 0){              
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
              }
            if(prod_incoming_inventory > 0){              
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Coming soon</span> <span class="coming-soon__get-updates">Get updates</span> </span> </div>'          
              }        
            if(prod_incoming_inventory <= 0 && prod_inventory <= 0){              
              var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span> <span class="price__badge price__badge--sold-out"> <span>Sold Out</span> </span> </div>'          
              }
            if(prod_inventory > 0){  
              if(prod_regular_price && prod_compare_at_price){
                var badges = '<div class="price__badges price__badges--listing"> <span class="price__badge price__badge--sale" aria-hidden="true"> Sale </span></div>'
                }
            }


            //           if(badges){
            //             console.log(badges);
            //           }

            if(prod_inventory <= 9 &&  prod_inventory >= 0){          
              var left_qty = '<small class="badge__product-quantity">Only '+ prod_inventory +' left!</small>'     
              }else{
                var left_qty = '';
              }
            if(prod_regular_price){   
              var price_dom = '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }
            if(prod_regular_price && prod_compare_at_price){              
              if(prod_inventory <= 0){
                var price_dom= '<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
                }else{
                  //alert('1');
                  var price_dom= '<dl class="price price--listing price--on-sale "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">$'+ prod_regular_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">$'+ prod_regular_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> $'+ prod_compare_at_price +' </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
                  }       
            }
            if(prod_from_price){
              var price_dom ='<dl class="price price--listing price--sold-out "> <div class="price__regular"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <span class="price-item price-item--regular">from $'+ prod_from_price +'</span> </dd> </div><div class="price__sale"> <dt> <span class="visually-hidden visually-hidden--inline">Sale price</span> </dt> <dd> <span class="price-item price-item--sale">from $'+ prod_from_price +'</span> </dd> <div class="price__compare"> <dt> <span class="visually-hidden visually-hidden--inline">Regular price</span> </dt> <dd> <s class="price-item price-item--regular"> </s> </dd> </div></div><div class="price__unit"> <dt> <span class="visually-hidden visually-hidden--inline">Unit price</span> </dt> <dd class="price-unit-price"><span></span><span aria-hidden="true">/</span><span class="visually-hidden">per&nbsp;</span><span></span></dd> </div>'+ badges +'</dl>'
              }

            var product_list = '<li class="product-grid__item product-card-'+ prod_id +'"><div class="grid-view-item  product-card"><a class="grid-view-item__link grid-view-item__image-container full-width-link" href="/products/'+ prod_url +'"> <span class="visually-hidden">'+ prod_title +'</span></a><div class="product-card__image-with-placeholder-wrapper"><div id="ProductCardImageWrapper-collection-template-'+ prod_id +'" class="grid-view-item__image-wrapper product-card__image-wrapper js"><img id="ProductCardImage-collection-template-'+ prod_id +'" class="grid-view-item__image ls-is-cached lazyloaded" src="'+ prod_img +'" alt=""></div></div><div class="grid-view-item__description"><div class="grid-view-item__description-top"><div class="grid-view-item__title product-card__title" aria-hidden="true">'+ prod_title +'</div>'+ price_dom +'</div>'+ left_qty +'</div></div></div></li>'

            document.getElementById("product-grid-custom").innerHTML += product_list;                    

          }        
        }      
      });

      //sort by
      var alphabet = '<div><b>FILTER BY LETTER: </b></div><div class="variable-width"><span class="alphabet-inner" onclick="alphabets(this)">A</span><span class="alphabet-inner" onclick="alphabets(this)">B</span><span class="alphabet-inner" onclick="alphabets(this)">C</span><span class="alphabet-inner" onclick="alphabets(this)">D</span><span class="alphabet-inner" onclick="alphabets(this)">E</span><span class="alphabet-inner" onclick="alphabets(this)">F</span><span class="alphabet-inner" onclick="alphabets(this)">G</span><span class="alphabet-inner" onclick="alphabets(this)">H</span><span class="alphabet-inner" onclick="alphabets(this)">I</span><span class="alphabet-inner" onclick="alphabets(this)">J</span><span class="alphabet-inner" onclick="alphabets(this)">K</span><span class="alphabet-inner" onclick="alphabets(this)">L</span><span class="alphabet-inner" onclick="alphabets(this)">M</span><span class="alphabet-inner" onclick="alphabets(this)">N</span><span class="alphabet-inner" onclick="alphabets(this)">O</span><span class="alphabet-inner" onclick="alphabets(this)">P</span><span class="alphabet-inner" onclick="alphabets(this)">Q</span><span class="alphabet-inner" onclick="alphabets(this)">R</span><span class="alphabet-inner" onclick="alphabets(this)">S</span><span class="alphabet-inner" onclick="alphabets(this)">T</span><span class="alphabet-inner" onclick="alphabets(this)">U</span><span class="alphabet-inner" onclick="alphabets(this)">V</span><span class="alphabet-inner" onclick="alphabets(this)">W</span><span class="alphabet-inner" onclick="alphabets(this)">X</span><span class="alphabet-inner" onclick="alphabets(this)">Y</span><span class="alphabet-inner" onclick="alphabets(this)">Z</span></div>'
      document.getElementById("alphabet").innerHTML += alphabet;
      
      // Create a media condition that targets viewports at least 768px wide
      const mediaQuery = window.matchMedia('(max-width: 1250px)')
      // Check if the media query is true
      if (mediaQuery.matches) {
        // Then trigger an alert
        $('.variable-width').slick({
          dots: false,
          infinite: false,
          speed: 300,
          slidesToShow: 1,
          centerMode: false,
          variableWidth: true
        });
      }else{
        //$('.variable-width').slick('unslick');
      }
      
      
      //console.log(all_products_count);
      var product_count = '<span class="filter-bar__item-count"><span id="count_update">'+ all_products_count +'</span> products</span><ul id="filter__current-tags" class="filter__current-tags"></ul>'
      document.getElementById("filter-bar-details-custom").innerHTML += product_count;

      var sort_by = '<div id="sort-by" class="sort-by"> <label class="sort-by__label" for="SortBy">Sort by</label> <select class="sort-by__select" name="SortBy" onchange="sortby(this)" id="SortBy"> <option value="manual">Featured</option> <option data-sort-direction="asc" value="title">Alphabetically, A-Z</option> <option data-sort-direction="desc" value="title">Alphabetically, Z-A</option> <option data-sort-direction="desc" value="price">Price, low to high</option> <option data-sort-direction="asc" value="price">Price, high to low</option> <option data-sort-direction="asc" value="shopify_published_at">Date, old to new</option> <option data-sort-direction="desc" value="shopify_published_at">Date, new to old</option> </select></div>'
      document.getElementById("filter-bar-details-custom").innerHTML += sort_by;

      if(all_products_count > pagination_limit){        
        var rountup = all_products_count / pagination_limit;
        var rountup1 = Math.ceil(rountup);
        

        var pagination_text = '<li class="paginate__prev" aria-hidden="true"> <button class="btn btn--tertiary btn--narrow" disabled=""> <span class="icon__fallback-text">Previous page</span> </button> </li><li class="pagination__text">Page 1 of '+ rountup1 +'</li><li class="paginate__next"> <a href="javascript:void(0)" data-next-page="2" onclick="paginate(this)" class="btn btn--tertiary btn--narrow"> <span class="icon__fallback-text">Next page</span> </a> </li>'
        document.getElementById("list--inline-pagination").innerHTML += pagination_text;
      }

      document.getElementById("loader").style.display = "none";
    }, 2000);
  }
    
  function reset_fillter(e) {
    setCookie('collection_handle', '', 30);
    setCookie('filter_fields1', '', 30);
    setCookie('sort_field2', '', 30);
    setCookie('sort_direction2', '', 30);
    setCookie('alphabet', '', 30);
    location.reload();
    
    return false;
  }
 document.getElementById("error-mes").style.display = "none";
 document.getElementById("loader").style.display = "block";
</script>


<style>
  #Collection{
    min-height: 30vw;
  }
  .product-card__image-with-placeholder-wrapper{
    padding-top: 100%;
  }
  #filter-list-custom .dropdown__button{
    text-transform: capitalize;
  }
  #loader {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999999;
    background-color: rgba(0, 0, 0, 0.6); 
    bottom: 0;
    right: 0;
/*     height: 100vh; */
  }
  #loader img {
    position: fixed;
    top: 50vh;
    left: 50vw;
    transform: translate(-50%, -50%);
  }
  #alphabet {
    padding: 1rem 0;
    border-top: 2px solid var(--color-lt-gray);
      }
  #alphabet .alphabet-inner {
	cursor: pointer;
	/* padding: 0 15px; */
	height: 40px;
	width: 40px;
	display: inline-block;
	text-align: center;
	vertical-align: middle;
	line-height: 41px;
}
  #alphabet .alphabet-inner.active {
    font-weight: bold;
    background: var(--color-teal);
      border-radius: 30px;
      color: #fff;
      }
  #alphabet div {
    display: inline;
  }
  #error-mes {
    text-align: center;
  }
  @media (max-width: 1250px){
    #alphabet div {
      display: block;
    }
    .variable-width {
      padding: 0 40px;
    }
    .slick-prev{
      left: 0;
    }
    .slick-prev, .slick-next{
      height: 40px;
      width: 40px;
    }
  }
</style>